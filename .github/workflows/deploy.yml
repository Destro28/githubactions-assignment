name: Deploy Flask API

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Build Docker image
        run: docker build -t flask-api:latest .

      - name: Save Docker image as tar
        run: docker save flask-api:latest -o flask-api.tar

      - name: Fix permissions on tar file
        run: chmod 644 flask-api.tar

      - name: Copy Docker image to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "flask-api.tar"
          target: "~/"

      - name: Deploy on VM via SSH (Zero Downtime)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          timeout: 120s
          command_timeout: 15m
          script: |
            docker stop flask-api-new || true
            docker rm flask-api-new || true
            docker load -i ~/flask-api.tar
            docker run -d --name flask-api-new -p 8080:80 flask-api:latest
            ATTEMPTS=0
            until curl -s http://localhost:8080/sayHello | grep -q "Hello User"; do
              echo "Waiting for new container to be ready..."
              sleep 2
              ATTEMPTS=$((ATTEMPTS+1))
              if [ $ATTEMPTS -ge 30 ]; then
                echo "Health check failed after 60 seconds."
                docker logs flask-api-new
                exit 1
              fi
            done
            docker stop flask-api || true
            docker rm flask-api || true
            docker run -d --name flask-api -p 80:80 flask-api:latest
            docker stop flask-api-new
            docker rm flask-api-new

